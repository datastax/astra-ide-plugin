/**
* Astra DevOps API
* Use this REST API to perform lifecycle actions for DataStax Astra databases.</br> </br> To get started, get your application token from your Astra database. You can then create, terminate, resize, park, and unpark databases using the DevOps API. You cannot park, unpark, or resize serverless databases.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
*
* The version of the OpenAPI document: 2.0.0
* Contact: ad-astra@datastax.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapi.example.model

import org.openapi.example.model.Costs

import com.squareup.moshi.Json

/**
 * AvailableRegionCombination defines a Tier, cloud provider, region combination
 * @param tier 
 * @param cloudProvider 
 * @param region 
 * @param cost 
 * @param databaseCountUsed 
 * @param databaseCountLimit 
 * @param capacityUnitsUsed 
 * @param capacityUnitsLimit 
 * @param defaultStoragePerCapacityUnitGb 
 */

data class AvailableRegionCombination (
    @Json(name = "tier")
    val tier: kotlin.String,
    @Json(name = "cloudProvider")
    val cloudProvider: kotlin.String,
    @Json(name = "region")
    val region: kotlin.String,
    @Json(name = "cost")
    val cost: Costs,
    @Json(name = "databaseCountUsed")
    val databaseCountUsed: kotlin.Int,
    @Json(name = "databaseCountLimit")
    val databaseCountLimit: kotlin.Int,
    @Json(name = "capacityUnitsUsed")
    val capacityUnitsUsed: kotlin.Int,
    @Json(name = "capacityUnitsLimit")
    val capacityUnitsLimit: kotlin.Int,
    @Json(name = "defaultStoragePerCapacityUnitGb")
    val defaultStoragePerCapacityUnitGb: kotlin.Int
)

